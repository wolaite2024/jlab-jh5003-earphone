#ifndef VECTOR_TABLE_H
#define VECTOR_TABLE_H

// *INDENT-OFF*
#include "stdint.h"
#include "stdbool.h"
#include "vector_table_auto_gen.h"

typedef enum
{
    InitialSP_VECTORn = 0,
    Reset_VECTORn,
    NMI_VECTORn,
    HardFault_VECTORn,
    MemMang_VECTORn,
    BusFault_VECTORn,
    UsageFault_VECTORn,
    RSVD0_VECTORn,
    RSVD1_VECTORn,
    RSVD2_VECTORn,
    RSVD3_VECTORn,
    SVC_VECTORn,
    DebugMonitor_VECTORn,
    RSVD4_VECTORn,
    PendSV_VECTORn,
    SysTick_VECTORn,

    System_VECTORn = 16,
    WDG_VECTORn,
    BTMAC_VECTORn,
    DSP_VECTORn,
    RXI300_VECTORn,
    SPI0_VECTORn,
    I2C0_VECTORn,
    ADC_VECTORn,
    SPORT0_RX_VECTORn,
    SPORT0_TX_VECTORn,
    Timer1_CH0_VECTORn,
    Timer1_CH1_VECTORn,
    Timer1_CH2_VECTORn,
    RTC_VECTORn,
    UART0_VECTORn,
    UART1_VECTORn,
    UART2_VECTORn,
    Peripheral_VECTORn,
    GPIO_A0_VECTORn,
    GPIO_A1_VECTORn,
    GPIO_A_2_7_VECTORn,
    GPIO_A_8_15_VECTORn,
    GPIO_A_16_23_VECTORn,
    GPIO_A_24_31_VECTORn,
    SPORT1_RX_VECTORn,
    SPORT1_TX_VECTORn,
    ADP_DET_NVIC_VECTORn,
    VBAT_DET_NVIC_VECTORn,
    GDMA0_Channel0_VECTORn,
    GDMA0_Channel1_VECTORn,
    GDMA0_Channel2_VECTORn,
    GDMA0_Channel3_VECTORn,
    GDMA0_Channel4_VECTORn,
    GDMA0_Channel5_VECTORn,
    GDMA0_Channel6_VECTORn,
    GDMA0_Channel7_VECTORn,
    GDMA0_Channel8_VECTORn,
    GPIO_B_0_7_VECTORn,
    GPIO_B_8_15_VECTORn,
    GPIO_B_16_23_VECTORn,
    GPIO_B_24_31_VECTORn,
    SPI1_VECTORn,
    SPI2_VECTORn,
    I2C1_VECTORn,
    I2C2_VECTORn,
    Keyscan_VECTORn,
    Qdecode_VECTORn,
    UART3_VECTORn,
    UART4_VECTORn,
    UART5_VECTORn,
    SPIC0_VECTORn,
    SPIC1_VECTORn,
    SPIC2_VECTORn,
    TIMER1_CH3_VECTORn,
    TIMER1_CH4_VECTORn,
    TIMER1_CH5_VECTORn,
    ASRC0_VECTORn,
    ASRC1_VECTORn,
    ETHERNET_VECTORn,
    ISO7816_VECTORn,
    SDIO0_VECTORn,
    SPORT2_RX_VECTORn,
    Zigbee_VECTORn,
    MJPEG_VECTORn,
    GDMA0_Channel9_VECTORn,
    GDMA0_Channel10_VECTORn,
    GDMA0_Channel11_VECTORn,
    DISPLAY_VECTORn,
    PPE_VECTORn,
    IDU_VECTORn,
    SLAVE_PORT_MONITOR_VECTORn,
    TIMER1_CH6_VECTORn,
    TIMER1_CH7_VECTORn,
    TIMER1_CH8_VECTORn,
    TIMER1_CH9_VECTORn,
    CAN0_VECTORn,
    BTMAC_WRAP_AROUND_VECTORn,
    PUBLIC_KEY_ENGINE_VECTORn,
    MFB_DET_L_VECTORn,
    spi_phy1_intr_VECTORn,
    CAN1_VECTORn,
    USB_VECTORn,
    ENDP_MULTI_PROC_INT_VECTORn,
    SUSPEND_N_INT_VECTORn,
    USB_IN_EP_INT_0_VECTORn,
    USB_IN_EP_INT_1_VECTORn,
    USB_IN_EP_INT_2_VECTORn,
    USB_IN_EP_INT_3_VECTORn,
    USB_IN_EP_INT_4_VECTORn,
    USB_IN_EP_INT_5_VECTORn,
    USB_IN_EP_INT_6_VECTORn,
    USB_OUT_EP_INT_0_VECTORn,
    USB_OUT_EP_INT_1_VECTORn,
    USB_OUT_EP_INT_2_VECTORn,
    USB_OUT_EP_INT_3_VECTORn,
    USB_OUT_EP_INT_4_VECTORn,
    USB_OUT_EP_INT_5_VECTORn,
    USB_OUT_EP_INT_6_VECTORn,
    USB_SOF_INT_VECTORn,
    IR_VECTORn,
    TRNG_VECTORn,
    LPC_VECTORn,
    PF_RTC_VECTORn,
    SPI_SLAVE_VECTORn,
    FLASH_SEC0_VECTORn,
} VECTORn_Type;

extern void *RamVectorTable[];
bool RamVectorTableUpdate(uint32_t v_num, IRQ_Fun isr_handler);

bool RamVectorTableInit(uint32_t ram_vector_addr);

#define MAX_REGISTER_FIRST_IRQ_NUM      (9)
#define IS_GPIO_FIRST_ISR(irqn)        ((((irqn) >= GPIO_A2_7_IRQn) && ((irqn) <= GPIO_A24_31_IRQn)) || (((irqn) >= GPIO_B0_7_IRQn) && ((irqn) <= GPIO_B24_31_IRQn)))

#define SUB_IRQ_DEF(first_irq, second_index) (((first_irq) << 8) | (second_index))
#define GET_FIRST_IRQn(sub_irq)         ((sub_irq)>>8)
typedef void (* P_SECOND_VECTOR_UPDATE)(uint32_t irqn, IRQ_Fun isr_handler);
bool RamVectorTableRegister(uint8_t irqn, P_SECOND_VECTOR_UPDATE reg_func);

// *INDENT-ON* 
#endif //#define VECTOR_TABLE_H
