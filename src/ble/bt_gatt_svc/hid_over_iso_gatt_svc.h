/**
*****************************************************************************************
*     Copyright(c) 2017, Realtek Semiconductor Corporation. All rights reserved.
*****************************************************************************************
  * @file     hid_over_iso_gatt_svc.h
  * @brief    Head file for using HID over ISO service.
  * @details  HID over ISO service data structs and external functions declaration developed based on bt_gatt_svc.h.
  * @author
  * @date
  * @version  CRr08
  * *************************************************************************************
  */

/* Define to prevent recursive inclusion */
#ifndef _HID_OVER_ISO_GATT_SVC_H_
#define _HID_OVER_ISO_GATT_SVC_H_

#ifdef  __cplusplus
extern "C" {
#endif      /* __cplusplus */

/* Add Includes here */
#include "bt_gatt_svc.h"
#include "hid_over_iso_def.h"


/** @defgroup HID_OVER_ISO_GATT_SVC HID over ISO Service
  * @brief  HID over ISO service
   * @details

     The HID over ISO Service defines one characteristic to describe the ISO-related properties of the HID Device,
     and one characteristic to configure the HID over ISO behavior and the state changes between Default Operation mode and Hybrid Operation mode.

  * @{
  */

/*============================================================================*
 *                         Macros
 *============================================================================*/
/** @defgroup HID_OVER_ISO_GATT_Exported_Macros HID Over ISO Service GATT Exported Macros
  * @brief
  * @{
  */
/** @defgroup HID_OVER_ISO_SVC_FEATURE_SUPPORT
  * @brief HID over ISO service feature support
  * @{
  */
#define LE_HID_OPERATION_MODE_CHAR_INDICATION_SUPPORT 1
/** @} End of HID_OVER_ISO_SVC_FEATURE_SUPPORT */

/** @defgroup HID_OVER_ISO_SVC_CB_MSG
  * @brief HID over ISO service callback messages
  * @{
  */
#define GATT_MSG_HID_OVER_ISO_SERVICE_WRITE_LE_HID_OPERATION_MODE  0x01
#define GATT_MSG_HID_OVER_ISO_SERVICE_CCCD_UPDATE                  0x02
/** @} End of HID_OVER_ISO_SVC_CB_MSG */

/** End of HID_OVER_ISO_GATT_Exported_Macros
* @}
*/

/*============================================================================*
 *                         Types
 *============================================================================*/
/** @defgroup HID_OVER_ISO_GATT_Exported_Types HID Over ISO Service GATT Exported Types
  * @brief
  * @{
  */
/**
 * @brief P_FUN_HID_OVER_ISO_SERVER_APP_CB HID Over ISO Service Callback Function Point Definition Function
 *        pointer used in HID Over ISO service module, to send events to specific server module.
 *        The events @ref HID_OVER_ISO_SVC_CB_MSG.
 */
typedef T_APP_RESULT(*P_FUN_HID_OVER_ISO_SERVER_APP_CB)(uint16_t conn_handle, uint16_t cid,
                                                        uint8_t type,
                                                        void *p_data);


/** @brief HID Over ISO service write LE HID operation mode
 *         The message data for GATT_MSG_HID_OVER_ISO_SERVICE_WRITE_LE_HID_OPERATION_MODE.
*/
typedef struct
{
    T_SERVER_ID service_id;
    T_LE_HID_OPERATION_MODE_VALUE  operation;
} T_HID_OVER_ISO_SERVICE_WRITE_LE_HID_OPERATION_MODE;

/** @brief HID Over ISO service CCCD data update info
 *         The message data for GATT_MSG_HID_OVER_ISO_SERVICE_CCCD_UPDATE.
*/
typedef struct
{
    T_SERVER_ID service_id;
    uint16_t cccd_cfg;
} T_HID_OVER_ISO_SERVICE_CCCD_UPDATE;

/** End of HID_OVER_ISO_GATT_Exported_Types
* @}
*/

/*============================================================================*
 *                         Functions
 *============================================================================*/
/** @defgroup HID_OVER_ISO_GATT_Exported_Functions HID Over ISO GATT Exported Functions
  * @brief
  * @{
  */

/**
 * @brief       Add HID over ISO service to the BLE stack database.
 *
 *
 * @param[in]   app_cb     Callback when service attribute was read, write or CCCD update.
 * @return Service id generated by the BLE stack: @ref T_SERVER_ID.
 * @retval 0xFF Operation failure.
 * @retval Others Service id assigned by stack.
 *
 * <b>Example usage</b>
 * \code{.c}
    void profile_init(uint16_t mode, uint8_t svc_num)
    {
         gatt_svc_init(mode, svc_num);
         hid_over_iso_id = hid_over_iso_reg_srv(app_hid_over_iso_service_callback);
    }
 * \endcode
 */
T_SERVER_ID hid_over_iso_reg_srv(P_FUN_HID_OVER_ISO_SERVER_APP_CB app_cb);

/**
 * @brief       Configure HID over ISO properties value.
 *
 * @param[in]   p_properties    HID over ISO properties value.
 * @return Operation result.
 * @retval true Operation success.
 * @retval false Operation failure.
 */
bool hid_over_iso_set_properties(const T_HID_OVER_ISO_PROPERTIES_VALUE *p_properties);

#if LE_HID_OPERATION_MODE_CHAR_INDICATION_SUPPORT
/**
 * @brief       Send LE HID operation mode indication data.
 *
 *
 * @param[in]   conn_handle    Connection handle of the ACL link.
 * @param[in]   service_id     Service id.
 * @param[in]   p_operation    LE HID Operation Mode value.
 * @return Operation result.
 * @retval true Operation success.
 * @retval false Operation failure.
 */
bool hid_over_iso_service_send_le_hid_operation_mode_indication(uint16_t conn_handle,
                                                                uint8_t service_id,
                                                                T_LE_HID_OPERATION_MODE_VALUE *p_operation);
#endif

/** @} End of HID_OVER_ISO_GATT_Exported_Functions */

/** @} End of HID_OVER_ISO_GATT_SVC */


#ifdef  __cplusplus
}
#endif      /*  __cplusplus */

#endif  /* _HID_OVER_ISO_GATT_SVC_H_ */
