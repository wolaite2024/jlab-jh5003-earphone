/**
*****************************************************************************************
*     Copyright(c) 2020, Realtek Semiconductor Corporation. All rights reserved.
*****************************************************************************************
   * @file      playback_service.h
   * @brief     Head file for using playback service
   * @author    lemon
   * @date      2020-08-11
   * @version   v1.0
   **************************************************************************************
   * @attention
   * <h2><center>&copy; COPYRIGHT 2017 Realtek Semiconductor Corporation</center></h2>
   **************************************************************************************
  */

/*============================================================================*
 *                      Define to prevent recursive inclusion
 *============================================================================*/
#ifndef _PLAYBACK_SERVICE_H_
#define _PLAYBACK_SERVICE_H_

#ifdef __cplusplus
extern "C" {
#endif

/*============================================================================*
 *                              Header Files
 *============================================================================*/
#if F_APP_GATT_SERVER_EXT_API_SUPPORT
#include <profile_server_ext.h>
#else
#include <profile_server.h>
#endif
#include "app_msg.h"

/** @defgroup  PLAYBACK_SERVICE PLAYBACK Service
    * @brief LE Service to implement PLAYBACK feature
    * @{
    */

#define BLE_PLAYBACK_MTU_SIZE   0x80

/*============================================================================*
 *                              Types
 *============================================================================*/
/** @defgroup PLAYBACK_SERVICE_Exported_Types PLAYBACK Service Exported Types
    * @brief
    * @{
    */

/** @brief  PLAYBACK write message */
typedef struct
{
    uint8_t opcode;
    uint8_t value;
} T_PLAYBACK_WRITE_MSG;

/** @brief  PLAYBACK upstream message data */
typedef union
{
    uint8_t notification_indification_index;
    uint8_t read_value_index;
    T_PLAYBACK_WRITE_MSG write;
} T_PLAYBACK_UPSTREAM_MSG_DATA;


/** @brief  PLAYBACK service callback data to inform application */
typedef struct
{
    T_SERVICE_CALLBACK_TYPE          msg_type;                   /**<  @brief EventId defined upper */
#if F_APP_GATT_SERVER_EXT_API_SUPPORT
    uint16_t                             conn_handle;
    uint16_t                             cid;
#endif
    uint8_t                          conn_id;
    T_PLAYBACK_UPSTREAM_MSG_DATA     msg_data;
} T_PLAYBACK_CALLBACK_DATA;

/** End of PLAYBACK_SERVICE_Exported_Types
    * @}
    */

/*============================================================================*
 *                              Macros
 *============================================================================*/
/** @defgroup PLAYBACK_SERVICE_Exported_Macros PLAYBACK service Exported Macros
    * @brief
    * @{
    */

/** @brief  vendor UUID defined for playback service*/
#define  GATT_UUID128_PLAYBACK_SERVICE_ADV   0xF5, 0x17, 0x82, 0x91, 0x82, 0x67, 0x42, 0x6C, 0xBD, 0xA1, 0x70, 0x4A, 0xA9, 0x58, 0x4D, 0x49

/** @brief  Demo Profile service related UUIDs. */
#define GATT_UUID_CHAR_PLAYBACK_WRITE                          0xBA26
#define GATT_UUID_CHAR_PLAYBACK_NOTIFY                         0xBA27

/** @brief  Index of each characteristic in Demo Profile service database. */
#define BLE_SERVICE_CHAR_PLAYBACK_WRITE_INDEX                   0x02
#define BLE_SERVICE_CHAR_PLAYBACK_NOTIFY_INDEX                  0x04
#define BLE_SERVICE_CHAR_PLAYBACK_DATA_CCCD_INDEX               0x05 /**< @brief Index for Transmit Service tx chars's CCCD value */

/** End of PLAYBACK_SERVICE_Exported_Macros
    * @}
    */

/*============================================================================*
 *                              Functions
 *============================================================================*/
/** @defgroup PLAYBACK_SERVICE_Exported_Functions PLAYBACK service Exported Functions
    * @brief
    * @{
    */

/**
    * @brief    Add PLAYBACK BLE service to application
    * @param    p_func  Pointer of APP callback function called by profile
    * @return   Service ID auto generated by profile layer
    * @retval   A T_SERVER_ID type value
    */
T_SERVER_ID playback_add_service(void *p_func);

/**
    * @brief    Send notification to peer side
    * @param    conn_id  PID to identify the connection
    * @param    p_data  value to be send to peer
    * @param    data_len  data length of the value to be send
    * @return   void
    */
void playback_service_send_notification(uint8_t conn_id, uint8_t *p_data, uint16_t data_len);

/** End of PLAYBACK_SERVICE_Exported_Functions
    * @}
    */

/** End of PLAYBACK_SERVICE
    * @}
    */
#ifdef __cplusplus
}
#endif

#endif
